stages:
  - build
  - release
  - deploy

variables:
  BUILD_PATH: dist
  DEPLOY_HOST: gailkirklandphotography.com

  NODE_ENV: production
  SERVER_SIDE_RENDERING: "true"

.build: &build
  artifacts:
    expire_in: 1 day
    paths:
      - $BUILD_PATH
      - package.json
      - public
  cache: &build-cache
    paths:
      - $BUILD_PATH
      - node_modules
      - public
  script:
    - node --version
    - npm --version
    - NODE_ENV= npm install
    - npm list --depth=0
    - NODE_ENV= npm list --depth=0 --only=dev
    - npm run build
  stage: build
  tags:
    - docker-node

build:
  <<: *build
  except:
    - tags

build-tag:
  <<: *build
  cache:
    <<: *build-cache
    key: $CI_BUILD_STAGE-tags
  only:
    - tags

.release: &release
  before_script:
    - export VERSION=$(git log -1 --pretty=%B | xargs)
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
  after_script:
    - docker push $CI_REGISTRY_IMAGE
    - docker system prune --force
  stage: release
  tags:
    - shell

release:
  <<: *release
  only:
    - tags
  script:
    - export VERSION=$(git log -1 --pretty=%B | xargs)
    - docker build -t $CI_REGISTRY_IMAGE:$VERSION .
    - docker tag $CI_REGISTRY_IMAGE:$VERSION $CI_REGISTRY_IMAGE

release-branch:
  <<: *release
  only:
    - branches
  except:
    - master
  script:
    - docker build -t $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME .

.deploy: &deploy
  environment:
    on_stop: stop
    url: https://$HOSTNAME
  script:
    - envsubst < docker-compose.template.production.yml > deploy/docker-compose.production.yml
    - >-
      rsync
      --itemize-changes
      --times
      .env
      deploy/*
      docker-compose.template.*
      $DEPLOY_HOST:$DEPLOY_PATH
    - export DOLLAR='$'
    - >-
      ssh
      $DEPLOY_HOST
      "cd $DEPLOY_PATH && '$SHELL' -s" <<-EOF
        export HOSTNAME=$HOSTNAME &&
        export HOST_PORT=${DOLLAR}(get-port) &&
        envsubst < docker-compose.template.yml > docker-compose.yml &&
        envsubst < site.bootstrap.template.conf | sudo tee /etc/nginx/sites-available/$HOSTNAME.conf &&
        sudo ln -s -fn /etc/nginx/sites-{available,enabled}/$HOSTNAME.conf &&
        sudo service nginx reload &&
        letsencrypt certonly --noninteractive --webroot --webroot-path /var/www/challenges --domain $HOSTNAME &&
        envsubst < site.template.conf | sudo tee /etc/nginx/sites-available/$HOSTNAME.conf &&
        sudo ln -s -fn /etc/nginx/sites-{available,enabled}/$HOSTNAME.conf &&
        sudo nginx -s reload &&
        docker-compose pull &&
        docker-compose up -d &&
        docker system prune --force
      EOF
  stage: deploy
  tags:
    - shell

deploy:
  <<: *deploy
  environment:
    name: production
    # TODO: remove this line when custom variables are supported
    url: https://gailkirklandphotography.com
  before_script:
    - envsubst < .env.production > .env
  only:
    - tags
  variables:
    CONTAINER_TAG: latest
    DEPLOY_PATH: $CI_PROJECT_NAME
    HOSTNAME: $DEPLOY_HOST

deploy-branch:
  <<: *deploy
  environment:
    name: $CI_BUILD_REF_NAME
    # TODO: remove this line when custom variables are supported
    url: https://$CI_BUILD_REF_NAME.gailkirklandphotography.com
  before_script:
    - envsubst < .env.qa > .env
  only:
    - branches
  except:
    - master
  variables:
    CONTAINER_TAG: $CI_BUILD_REF_NAME
    DEPLOY_PATH: $CI_PROJECT_NAME-$CI_BUILD_REF_NAME
    HOSTNAME: $CI_BUILD_REF_NAME.$DEPLOY_HOST

stop:
  environment:
    action: stop
    name: $CI_COMMIT_REF_NAME
  except:
    - master
  script:
    - >-
      ssh
      $DEPLOY_HOST
      "cd $DEPLOY_PATH && '$SHELL' -s" <<-EOF
        docker-compose down
        docker rmi $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
        cd ..
        rm -rf $DEPLOY_PATH
        rm /etc/nginx/sites-{available,enabled}/$HOSTNAME.conf
        rm -rf /etc/letsencrypt/{archive,live,renewal}/$HOSTNAME*
        sudo nginx -s reload
      EOF
    - sudo --user=registry docker-distribution-pruner -config=/var/opt/gitlab/registry/config.yml -delete -soft-delete=false
  stage: deploy
  tags:
    - shell
  variables:
    CONTAINER_TAG: $CI_COMMIT_REF_NAME
    DEPLOY_PATH: $CI_PROJECT_NAME-$CI_COMMIT_REF_NAME
    GIT_STRATEGY: none
    HOSTNAME: $CI_COMMIT_REF_NAME.$DEPLOY_HOST

  when: manual
