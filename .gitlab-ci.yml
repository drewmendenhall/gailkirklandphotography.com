stages:
  - build
  - release
  - deploy

variables:
  BUILD_PATH: dist
  CONTAINER_REGISTRY: containers.mendenhall.io
  CONTAINER_USERNAME: drew
  DEPLOY_HOST: gailkirklandphotography.com
  REPO_NAME: gailkirklandphotography-www

  CONTAINER_NAME: $CONTAINER_REGISTRY/$CONTAINER_USERNAME/$REPO_NAME
  DEPLOY_PATH: $REPO_NAME

  ANALYTICS: "true"
  NODE_ENV: production
  SERVER_SIDE_RENDERING: "true"

.build: &build
  artifacts:
    expire_in: 1 day
    paths:
      - $BUILD_PATH
      - package.json
      - public
  cache: &build-cache
    paths:
      - $BUILD_PATH
      - node_modules
      - public
  script:
    - node --version
    - npm --version
    - npm prune --production=false
    - npm install
    - npm install --only=dev
    - npm list --depth=0
    - NODE_ENV= npm list --depth=0 --only=dev
    - npm run build
  stage: build
  tags:
    - docker-node

build:
  <<: *build
  except:
    - tags

build-tag:
  <<: *build
  cache:
    <<: *build-cache
    key: $CI_BUILD_STAGE/tags
  only:
    - tags

.release: &release
  only:
    - tags
  before_script:
    - export VERSION=$(git log -1 --pretty=%B | xargs)
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CONTAINER_REGISTRY
  after_script:
    - docker push $CONTAINER_NAME
    - docker-clean
  stage: release
  tags:
    - shell

release:
  <<: *release
  only:
    - tags
  script:
    - export VERSION=$(git log -1 --pretty=%B | xargs)
    - docker build -t $CONTAINER_NAME:$VERSION .
    - docker tag $CONTAINER_NAME:$VERSION $CONTAINER_NAME

release-branch:
  <<: *release
  only:
    - branches
  except:
    - master
  script:
    - docker build -t $CONTAINER_NAME:$CI_BUILD_REF_NAME .

deploy:
  only:
    - tags
  script:
    - >-
      ssh
      $DEPLOY_HOST
      "cd $DEPLOY_PATH && '$SHELL' -s" <<-EOF
        docker-compose pull &&
        docker-compose up -d &&
        docker-clean
      EOF
  stage: deploy
  tags:
    - shell
